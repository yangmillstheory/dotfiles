font pango:Hack,FontAwesome 12

# i3-gaps
gaps inner 10
gaps outer 10
gaps horizontal 10
gaps vertical 10
gaps top 10
gaps right 10
gaps bottom 10
gaps left 10

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
  bindsym o      mode "$mode_gaps_outer"
  bindsym i      mode "$mode_gaps_inner"
  bindsym h      mode "$mode_gaps_horiz"
  bindsym v      mode "$mode_gaps_verti"
  bindsym t      mode "$mode_gaps_top"
  bindsym r      mode "$mode_gaps_right"
  bindsym b      mode "$mode_gaps_bottom"
  bindsym l      mode "$mode_gaps_left"
  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
  bindsym plus  gaps outer current plus 5
  bindsym minus gaps outer current minus 5
  bindsym 0     gaps outer current set 0

  bindsym Shift+plus  gaps outer all plus 5
  bindsym Shift+minus gaps outer all minus 5
  bindsym Shift+0     gaps outer all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
  bindsym plus  gaps inner current plus 5
  bindsym minus gaps inner current minus 5
  bindsym 0     gaps inner current set 0

  bindsym Shift+plus  gaps inner all plus 5
  bindsym Shift+minus gaps inner all minus 5
  bindsym Shift+0     gaps inner all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
  bindsym plus  gaps horizontal current plus 5
  bindsym minus gaps horizontal current minus 5
  bindsym 0     gaps horizontal current set 0

  bindsym Shift+plus  gaps horizontal all plus 5
  bindsym Shift+minus gaps horizontal all minus 5
  bindsym Shift+0     gaps horizontal all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
  bindsym plus  gaps vertical current plus 5
  bindsym minus gaps vertical current minus 5
  bindsym 0     gaps vertical current set 0

  bindsym Shift+plus  gaps vertical all plus 5
  bindsym Shift+minus gaps vertical all minus 5
  bindsym Shift+0     gaps vertical all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
  bindsym plus  gaps top current plus 5
  bindsym minus gaps top current minus 5
  bindsym 0     gaps top current set 0

  bindsym Shift+plus  gaps top all plus 5
  bindsym Shift+minus gaps top all minus 5
  bindsym Shift+0     gaps top all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
  bindsym plus  gaps right current plus 5
  bindsym minus gaps right current minus 5
  bindsym 0     gaps right current set 0

  bindsym Shift+plus  gaps right all plus 5
  bindsym Shift+minus gaps right all minus 5
  bindsym Shift+0     gaps right all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
  bindsym plus  gaps bottom current plus 5
  bindsym minus gaps bottom current minus 5
  bindsym 0     gaps bottom current set 0

  bindsym Shift+plus  gaps bottom all plus 5
  bindsym Shift+minus gaps bottom all minus 5
  bindsym Shift+0     gaps bottom all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
  bindsym plus  gaps left current plus 5
  bindsym minus gaps left current minus 5
  bindsym 0     gaps left current set 0

  bindsym Shift+plus  gaps left all plus 5
  bindsym Shift+minus gaps left all minus 5
  bindsym Shift+0     gaps left all set 0

  bindsym Return mode "$mode_gaps"
  bindsym Escape mode "default"
}

# set modifier key to Win key
set $mod Mod4

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec zsh -c "rofi -show run -config ~/.config/rofi/config.rasi"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split orientation
bindsym $mod+backslash split h
bindsym $mod+minus split v

# fullscreen
bindsym $mod+f fullscreen toggle

# layout
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# tiling vs. floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
bindsym $mod+Shift+Return exec google-chrome

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3: "
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0

for_window [class="Spotify"] move to workspace $ws0
for_window [class=".*"] border pixel 0

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Really exit?' -b 'yes' 'i3-msg exit'"

mode "resize" {
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Arc-Dark theme
set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676e7d
set $urgent-bg-color     #e53935
set $indicator-color     #00ff00
client.focused          $bg-color          $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-bg-color   $inactive-text-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator-color

bar {
  status_command i3blocks
  colors {
    background         $bg-color
    separator          #757575
    focused_workspace  $bg-color          $bg-color          $text-color
    inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
    urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
  }
}

# support transparent windows
exec --no-startup-id compton -f

# wallpaper & monitors
exec --no-startup-id ~/.screenlayout/home.sh
# exec --no-startup-id ~/.screenlayout/mobile.sh
exec_always --no-startup-id feh --bg-fill ~/Pictures/backgrounds/Leaves.jpg

exec --no-startup-id alacritty
exec --no-startup-id google-chrome
exec --no-startup-id spotify

# lock screen
bindsym $mod+shift+x exec ~/.bin/blur_i3_lock
# make sure screen locks when idle
exec --no-startup-id xautolock \
  -locker "/home/victoralvarez/.bin/blur_i3_lock" \
  -time 8 \
  -detectsleep \
  -notify 30 \
  -notifier "notify-send -u critical -t 15000 -- 'Warning!' 'Inactivity detected; locking soon.'" \
# lock when suspended
exec --no-startup-id xss-lock -l -- ~/.bin/blur_i3_lock


# used to bind mouse buttons
exec_always xbindkeys --poll-rc

# media, screen, volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
bindsym XF86MonBrightnessUp exec xbacklight -inc 20
bindsym XF86MonBrightnessDown exec xbacklight -dec 20
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# scratchpad
bindsym $mod+Shift+z move scratchpad
bindsym $mod+z scratchpad show

# workspace
bindsym $mod+period workspace next
bindsym $mod+comma workspace prev
bindsym $mod+slash workspace back_and_forth
bindsym $mod+Shift+period move workspace to output right
bindsym $mod+Shift+comma move workspace to output left

exec dex -ae i3
